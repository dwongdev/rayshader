% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_overlay.R
\name{add_overlay}
\alias{add_overlay}
\title{Add Overlay}
\usage{
add_overlay(
  hillshade = NULL,
  overlay = NULL,
  alphalayer = 1,
  alphacolor = NULL,
  alphamethod = "max",
  rescale_original = FALSE
)
}
\arguments{
\item{hillshade}{A three-dimensional RGB array or 2D matrix of shadow intensities.}

\item{overlay}{A three or four dimensional RGB array, where the 4th dimension represents the alpha (transparency) channel.
If the array is 3D, \code{alphacolor} should also be passed to indicate transparent regions.}

\item{alphalayer}{Default \code{1}. Defines minimum tranparaency of layer. If transparency already exists in \code{overlay}, the way \code{\link[=add_overlay]{add_overlay()}} combines
the two is determined in argument \code{alphamethod}.}

\item{alphacolor}{Default \code{NULL}. If \code{overlay} is a 3-layer array, this argument tells which color is interpretted as completely transparent.}

\item{alphamethod}{Default \code{max}. Method for dealing with pre-existing transparency with \code{layeralpha}.
If \code{max}, converts all alpha levels higher than \code{layeralpha} to the value set in \code{layeralpha}. Otherwise,
this just sets all transparency to \code{layeralpha}.}

\item{rescale_original}{Default \code{FALSE}. If \code{TRUE}, \code{hillshade} will be scaled to match the dimensions of \code{overlay} (instead of
the other way around).}
}
\value{
Hillshade with overlay.
}
\description{
Overlays an image (with a transparency layer) on the current map.
}
\examples{
#Combining base R plotting with rayshader's spherical color mapping and raytracing:
if(run_documentation()) {
montereybay \%>\%
  sphere_shade() \%>\%
  add_overlay(height_shade(montereybay),alphalayer = 0.6)  \%>\%
  add_shadow(ray_shade(montereybay,zscale=50)) \%>\%
  plot_map()
}

if(run_documentation()) {
#Add contours with `generate_contour_overlay()`
montereybay \%>\%
  height_shade() \%>\%
  add_overlay(generate_contour_overlay(montereybay))  \%>\%
  add_shadow(ray_shade(montereybay,zscale=50)) \%>\%
  plot_map()
}
}
