% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/render_depth.R
\name{render_depth}
\alias{render_depth}
\title{Render Depth of Field}
\usage{
render_depth(
  focus = NULL,
  focallength = 100,
  fstop = 4,
  filename = NULL,
  preview_focus = FALSE,
  bokehshape = "circle",
  bokehintensity = 1,
  bokehlimit = 0.8,
  rotation = 0,
  gamma_correction = TRUE,
  aberration = 0,
  transparent_water = FALSE,
  heightmap = NULL,
  zscale = NULL,
  title_text = NULL,
  title_offset = c(20, 20),
  title_color = "black",
  title_size = 30,
  title_font = "sans",
  title_bar_color = NA,
  title_bar_alpha = 0.5,
  title_just = "left",
  image_overlay = NULL,
  vignette = FALSE,
  vignette_color = "black",
  vignette_radius = 1.3,
  progbar = interactive(),
  software_render = FALSE,
  width = NULL,
  height = NULL,
  camera_location = NULL,
  camera_lookat = c(0, 0, 0),
  background = "white",
  text_angle = NULL,
  text_size = 10,
  text_offset = c(0, 0, 0),
  point_radius = 0.5,
  line_offset = 1e-07,
  cache_scene = FALSE,
  reset_scene_cache = FALSE,
  print_scene_info = FALSE,
  instant_capture = interactive(),
  clear = FALSE,
  bring_to_front = FALSE,
  ...
)
}
\arguments{
\item{focus}{Focal point. Defaults to the center of the bounding box. Depth in which to blur, in distance to the camera plane.}

\item{focallength}{Default \code{1}. Focal length of the virtual camera.}

\item{fstop}{Default \code{1}. F-stop of the virtual camera.}

\item{filename}{The filename of the image to be saved. If this is not given, the image will be plotted instead.}

\item{preview_focus}{Default \code{FALSE}. If \code{TRUE}, a red line will be drawn across the image
showing where the camera will be focused.}

\item{bokehshape}{Default \code{circle}. Also built-in: \code{hex}. The shape of the bokeh.}

\item{bokehintensity}{Default \code{3}. Intensity of the bokeh when the pixel intensity is greater than \code{bokehlimit}.}

\item{bokehlimit}{Default \code{0.8}. Limit after which the bokeh intensity is increased by \code{bokehintensity}.}

\item{rotation}{Default \code{0}. Number of degrees to rotate the hexagon bokeh shape.}

\item{gamma_correction}{Default \code{TRUE}. Controls gamma correction when adding colors. Default exponent of 2.2.}

\item{aberration}{Default \code{0}. Adds chromatic aberration to the image. Maximum of \code{1}.}

\item{transparent_water}{Default \code{FALSE}. If \code{TRUE}, depth is determined without water layer. User will have to re-render the water
layer with \code{\link[=render_water]{render_water()}} if they want to recreate the water layer.}

\item{heightmap}{Default \code{NULL}. The height matrix for the scene. Passing this will allow \code{\link[=render_depth]{render_depth()}}
to automatically redraw the water layer if \code{transparent_water = TRUE}.}

\item{zscale}{Default \code{NULL}. The zscale value for the heightmap. Passing this will allow \code{\link[=render_depth]{render_depth()}}
to automatically redraw the water layer if \code{transparent_water = TRUE}.}

\item{title_text}{Default \code{NULL}. Text. Adds a title to the image, using magick::image_annotate.}

\item{title_offset}{Default \code{c(20,20)}. Distance from the top-left (default, \code{gravity} direction in
image_annotate) corner to offset the title.}

\item{title_color}{Default \code{black}. Font color.}

\item{title_size}{Default \code{30}. Font size in pixels.}

\item{title_font}{Default \code{sans}. String with font family such as "sans", "mono", "serif", "Times", "Helvetica",
"Trebuchet", "Georgia", "Palatino" or "Comic Sans".}

\item{title_bar_color}{Default \code{NA}. If a color, this will create a colored bar under the title.}

\item{title_bar_alpha}{Default \code{0.5}. Transparency of the title bar.}

\item{title_just}{Default \code{left}. Justification of the title.}

\item{image_overlay}{Default \code{NULL}. Either a string indicating the location of a png image to overlay
over the image (transparency included), or a 4-layer RGBA array. This image will be resized to the
dimension of the image if it does not match exactly.}

\item{vignette}{Default \code{FALSE}. If \code{TRUE} or numeric, a camera vignetting effect will be added to the image.
\code{1} is the darkest vignetting, while \code{0} is no vignetting. If vignette is a length-2 vector, the second entry will
control the blurriness of the vignette effect.}

\item{vignette_color}{Default \code{"black"}. Color of the vignette.}

\item{vignette_radius}{Default \code{1.3}. Radius of the vignette, as a porportion of the image dimensions.}

\item{progbar}{Default \code{TRUE} if in an interactive session. Displays a progress bar.}

\item{software_render}{Default \code{FALSE}. If \code{TRUE}, rayshader will use the rayvertex package to render the snapshot, which
is not constrained by the screen size or requires OpenGL.}

\item{width}{Default \code{NULL}. Optional argument to pass to \code{rgl::snapshot3d()} to specify the
width when \code{software_render = TRUE}..}

\item{height}{Default \code{NULL}. Optional argument to pass to \code{rgl::snapshot3d()} to specify the
height when \code{software_render = TRUE}.}

\item{camera_location}{Default \code{NULL}. Custom position of the camera. The \code{FOV}, \code{width}, and \code{height} arguments will still
be derived from the rgl window.}

\item{camera_lookat}{Default \code{NULL}. Custom point at which the camera is directed. The \code{FOV}, \code{width}, and \code{height} arguments will still
be derived from the rgl window.}

\item{background}{Default \code{"white"}. Background color when \code{software_render = TRUE}.}

\item{text_angle}{Default \code{NULL}, which forces the text always to face the camera. If a single angle (degrees),
will specify the absolute angle all the labels are facing. If three angles, this will specify all three orientations
(relative to the x,y, and z axes) of the text labels.}

\item{text_size}{Default \code{10}. Height of the text.}

\item{text_offset}{Default \code{c(0,0,0)}. Offset to be applied to all text labels.}

\item{point_radius}{Default \code{0.5}. Radius of 3D points (rendered with \code{\link[=render_points]{render_points()}}.}

\item{line_offset}{Default \code{1e-7}. Small number indicating the offset in the scene to apply to lines if using software rendering. Increase this if your lines
aren't showing up, or decrease it if lines are appearing through solid objects.}

\item{cache_scene}{Default \code{FALSE}. Whether to cache the current scene to memory so it does not have to be converted to a \code{raymesh} object
each time \code{\link[=render_snapshot]{render_snapshot()}} is called. If \code{TRUE} and a scene has been cached, it will be used when rendering.}

\item{reset_scene_cache}{Default \code{FALSE}. Resets the scene cache before rendering.}

\item{print_scene_info}{Default \code{FALSE}. If \code{TRUE}, it will print the position and lookat point of the camera.}

\item{instant_capture}{Default \code{TRUE} if interactive, \code{FALSE} otherwise. If \code{FALSE}, a slight delay is added
before taking the snapshot. This can help stop prevent rendering issues when running scripts.}

\item{clear}{Default \code{FALSE}. If \code{TRUE}, the current \code{rgl} device will be cleared.}

\item{bring_to_front}{Default \code{FALSE}. Whether to bring the window to the front when rendering the snapshot.}

\item{...}{Additional parameters to pass to \code{rayvertex::rasterize_scene()}.}
}
\value{
4-layer RGBA array.
}
\description{
Adds depth of field to the current RGL scene by simulating a synthetic aperture.

The size of the circle of confusion is determined by the following formula (z_depth is from the image's depth map).

\code{abs(z_depth-focus)*focal_length^2/(f_stop*z_depth*(focus - focal_length))}
}
\examples{
if(run_documentation()) {
montereybay \%>\%
 sphere_shade() \%>\%
 plot_3d(montereybay,zscale=50, water=TRUE, waterlinecolor="white",
         zoom=0.3,theta=-135,fov=70, phi=20) 
 
#Preview where the focal plane lies
render_depth(preview_focus=TRUE)
}
if(run_documentation()) {
#Render the depth of field effect
render_depth(focallength = 300)
}
if(run_documentation()) {
#Add a chromatic aberration effect
render_depth(focallength = 300, aberration = 0.3)
}
if(run_documentation()) {
#Render the depth of field effect, ignoring water and re-drawing the waterlayer
render_depth(preview_focus=TRUE, 
            heightmap = montereybay, zscale=50, focallength=300, transparent_water=TRUE)
render_depth(heightmap = montereybay, zscale=50, focallength=300, transparent_water=TRUE)
render_camera(theta=45,zoom=0.15,phi=20)
}

if(run_documentation()) {
#Change the bokeh shape and intensity
render_depth(focus=900, bokehshape = "circle",focallength=500,bokehintensity=30,
            title_text = "Circular Bokeh", title_size = 30, title_color = "white", 
            title_bar_color = "black")
render_depth(focus=900, bokehshape = "hex",focallength=500,bokehintensity=30,
            title_text = "Hexagonal Bokeh", title_size = 30, title_color = "white", 
            title_bar_color = "black")
}

if(run_documentation()) {
#Add a title and vignette effect.
render_camera(theta=0,zoom=0.7,phi=30)
render_depth(focallength = 250, title_text = "Monterey Bay, CA", 
            title_size = 20, title_color = "white", title_bar_color = "black", vignette = TRUE)
}
}
